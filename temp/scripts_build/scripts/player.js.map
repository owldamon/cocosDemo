{"version":3,"sources":["assets\\scripts\\player.js"],"names":["cc","Class","extends","Component","properties","jumpHeight","jumpDuration","maxMoveSpeed","accel","jumpAudio","default","url","AudioClip","setJumpActon","jumpUp","moveBy","p","easing","easeCubicActionOut","jumpDown","easeCubicActionIn","callback","callFunc","playJumpSound","repeatForever","sequence","audioEngine","playEffect","setTouchControl","game","node","on","event","getLocationX","width","accLeft","accRight","setInputControl","self","eventManager","addListener","EventListener","KEYBOARD","onKeyPressed","keyCode","KEY","a","d","onKeyReleased","onPlayOver","getPosition","x","overLine","xSpeed","onLoad","jumpAciton","runAction","update","dt","Math","abs"],"mappings":"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","file":"unknown","sourcesContent":["cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // 主角跳跃高度\r\n        jumpHeight: 0,\r\n        // 主角跳跃持续时间\r\n        jumpDuration: 0,\r\n        // 最大移动速度\r\n        maxMoveSpeed: 0,\r\n        // 加速度\r\n        accel: 0,\r\n        // 跳跃音效\r\n        jumpAudio: {\r\n            default: null,\r\n            url: cc.AudioClip\r\n        }\r\n    },\r\n\r\n    setJumpActon: function () {\r\n        // 跳跃上升\r\n        var jumpUp = cc.moveBy(this.jumpDuration, cc.p(0, this.jumpHeight)).easing(cc.easeCubicActionOut());\r\n        // 跳跃下降\r\n        var jumpDown = cc.moveBy(this.jumpDuration, cc.p(0, -this.jumpHeight)).easing(cc.easeCubicActionIn());\r\n\r\n        var callback = cc.callFunc(this.playJumpSound, this);\r\n        return cc.repeatForever(cc.sequence(jumpUp, jumpDown, callback));\r\n\r\n    },\r\n    playJumpSound: function () {\r\n        cc.audioEngine.playEffect(this.jumpAudio, false);\r\n    },\r\n    setTouchControl: function () {\r\n        this.game.node.on('touchstart', function (event) {\r\n            if (event.getLocationX() > this.game.node.width / 2) {\r\n                this.accLeft = false;\r\n                this.accRight = true;\r\n            } else {\r\n                this.accLeft = true;\r\n                this.accRight = false;\r\n            }\r\n        }, this)\r\n        this.game.node.on('touchend', function (event) {\r\n            this.accLeft = false;\r\n            this.accRight = false;\r\n        }, this)\r\n    },\r\n    setInputControl: function () {\r\n        var self = this;\r\n        // 添加键盘控制\r\n        cc.eventManager.addListener({\r\n            event: cc.EventListener.KEYBOARD,\r\n            onKeyPressed: function (keyCode, event) {\r\n                switch (keyCode) {\r\n                    case cc.KEY.a:\r\n                        self.accLeft = true;\r\n                        self.accRight = false;\r\n                        break;\r\n                    case cc.KEY.d:\r\n                        self.accLeft = false;\r\n                        self.accRight = true;\r\n                        break;\r\n                }\r\n            },\r\n            onKeyReleased: function (keyCode, event) {\r\n                switch (keyCode) {\r\n                    case cc.KEY.a:\r\n                        self.accLeft = false;\r\n                        break;\r\n                    case cc.KEY.d:\r\n                        self.accRight = false;\r\n                        break;\r\n                }\r\n            }\r\n        }, self.node);\r\n    },\r\n    onPlayOver: function () {\r\n        if (this.node.getPosition().x > this.overLine - this.node.width) {\r\n            this.node.x = this.overLine - this.node.width;\r\n            this.xSpeed = 0\r\n            return;\r\n        }\r\n        if (this.node.getPosition().x < -this.overLine + this.node.width) {\r\n            this.node.x = -this.overLine + this.node.width;\r\n            this.xSpeed = 0\r\n            return;\r\n        }\r\n    },\r\n    // use this for initialization\r\n    onLoad: function () {\r\n        // 初始化跳跃动作\r\n        this.jumpAciton = this.setJumpActon();\r\n        this.node.runAction(this.jumpAciton);\r\n        this.accLeft = false;\r\n        this.accRight = false;\r\n        this.xSpeed = 0;\r\n        this.setInputControl();\r\n        this.setTouchControl()\r\n        this.overLine = this.game.node.width / 2;\r\n    },\r\n\r\n    // called every frame, uncomment this function to activate update callback\r\n    update: function (dt) {\r\n        if (this.accLeft) {\r\n            this.xSpeed -= this.accel * dt;\r\n        } else if (this.accRight) {\r\n            this.xSpeed += this.accel * dt;\r\n        };\r\n        if (Math.abs(this.xSpeed) > this.maxMoveSpeed) {\r\n            this.xSpeed = this.maxMoveSpeed * this.xSpeed / Math.abs(this.xSpeed);\r\n        };\r\n        this.node.x += this.xSpeed * dt;\r\n        this.onPlayOver();\r\n    },\r\n});"]}