{"version":3,"sources":["assets\\scripts\\player.js"],"names":["cc","Class","extends","Component","properties","jumpHeight","jumpDuration","maxMoveSpeed","accel","jumpAudio","default","url","AudioClip","setJumpActon","jumpUp","moveBy","p","easing","easeCubicActionOut","jumpDown","easeCubicActionIn","callback","callFunc","playJumpSound","repeatForever","sequence","audioEngine","playEffect","setInputControl","self","eventManager","addListener","event","EventListener","KEYBOARD","onKeyPressed","keyCode","KEY","a","accLeft","accRight","d","onKeyReleased","node","onPlayOver","getPosition","x","overLine","width","xSpeed","onLoad","jumpAciton","runAction","game","log","update","dt","Math","abs"],"mappings":"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","file":"unknown","sourcesContent":["cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // 主角跳跃高度\r\n        jumpHeight: 0,\r\n        // 主角跳跃持续时间\r\n        jumpDuration: 0,\r\n        // 最大移动速度\r\n        maxMoveSpeed: 0,\r\n        // 加速度\r\n        accel: 0,\r\n        // 跳跃音效\r\n        jumpAudio: {\r\n            default: null,\r\n            url: cc.AudioClip\r\n        }\r\n    },\r\n\r\n    setJumpActon: function () {\r\n        // 跳跃上升\r\n        var jumpUp = cc.moveBy(this.jumpDuration, cc.p(0, this.jumpHeight)).easing(cc.easeCubicActionOut());\r\n        // 跳跃下降\r\n        var jumpDown = cc.moveBy(this.jumpDuration, cc.p(0, -this.jumpHeight)).easing(cc.easeCubicActionIn());\r\n\r\n        var callback = cc.callFunc(this.playJumpSound, this);\r\n        return cc.repeatForever(cc.sequence(jumpUp, jumpDown, callback));\r\n\r\n    },\r\n    playJumpSound: function () {\r\n        cc.audioEngine.playEffect(this.jumpAudio, false);\r\n    },\r\n    setInputControl: function () {\r\n        var self = this;\r\n        // 添加键盘控制\r\n        cc.eventManager.addListener({\r\n            event: cc.EventListener.KEYBOARD,\r\n            onKeyPressed: function (keyCode, event) {\r\n                switch (keyCode) {\r\n                    case cc.KEY.a:\r\n                        self.accLeft = true;\r\n                        self.accRight = false;\r\n                        break;\r\n                    case cc.KEY.d:\r\n                        self.accLeft = false;\r\n                        self.accRight = true;\r\n                        break;\r\n                }\r\n            },\r\n            onKeyReleased: function (keyCode, event) {\r\n                switch (keyCode) {\r\n                    case cc.KEY.a:\r\n                        self.accLeft = false;\r\n                        break;\r\n                    case cc.KEY.d:\r\n                        self.accRight = false;\r\n                        break;\r\n                }\r\n            }\r\n        }, self.node);\r\n    },\r\n    onPlayOver: function () {\r\n        if (this.node.getPosition().x > this.overLine - this.node.width) {\r\n            this.node.x = this.overLine - this.node.width;\r\n            this.xSpeed = 0\r\n            return;\r\n        }\r\n        if (this.node.getPosition().x < -this.overLine + this.node.width) {\r\n            this.node.x = -this.overLine + this.node.width;\r\n            this.xSpeed = 0\r\n            return;\r\n        }\r\n    },\r\n    // use this for initialization\r\n    onLoad: function () {\r\n        // 初始化跳跃动作\r\n        this.jumpAciton = this.setJumpActon();\r\n        this.node.runAction(this.jumpAciton);\r\n        this.accLeft = false;\r\n        this.accRight = false;\r\n        this.xSpeed = 0;\r\n        this.setInputControl();\r\n        this.overLine = this.game.node.width / 2;\r\n        cc.log(this.node.width);\r\n    },\r\n\r\n    // called every frame, uncomment this function to activate update callback\r\n    update: function (dt) {\r\n        if (this.accLeft) {\r\n            this.xSpeed -= this.accel * dt;\r\n        } else if (this.accRight) {\r\n            this.xSpeed += this.accel * dt;\r\n        };\r\n        if (Math.abs(this.xSpeed) > this.maxMoveSpeed) {\r\n            this.xSpeed = this.maxMoveSpeed * this.xSpeed / Math.abs(this.xSpeed);\r\n        };\r\n        this.node.x += this.xSpeed * dt;\r\n        this.onPlayOver();\r\n    },\r\n});"]}